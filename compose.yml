services:
  app:
    container_name: challenge_app
    build:
      context: ../LuisaChallenge 
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    volumes:
      - ../LuisaChallenge/src/main:/app/src/main
    restart: always
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=verysecret
      - DB_NAME=challenge
      - SECRET=secret
      - ISSUER=issuer
      - MAIL_HOST=sandbox.smtp.mailtrap.io
      - MAIL_PORT=2525
      - MAIL_USER=user
      - MAIL_PASS=pass
      - MAIL_FROM=email@email.com
    networks:
      - challenge_network
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    container_name: challenge_mysql
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=challenge'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
    ports:
      - '3306:3306'
    networks:
      - challenge_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      start_period: 1m
      interval: 1m
      timeout: 5s
      retries: 3
  front:
    image: node:20.17-alpine
    container_name: front
    working_dir: /app
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_PRODUCTS_API_URL=https://fakestoreapi.com
      - NEXT_PUBLIC_API_URL=http://app:8080/
    command: sh -c "npm install && npm run dev"
    networks:
      - challenge_network

networks:
  challenge_network:
    driver: bridge